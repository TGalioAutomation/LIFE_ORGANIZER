# Generated by Django 5.2.4 on 2025-07-06 17:59

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GoalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#28a745', max_length=7)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goal Category',
                'verbose_name_plural': 'Goal Categories',
                'ordering': ['name'],
                'unique_together': {('name', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('goal_type', models.CharField(choices=[('numeric', 'Numeric Target'), ('boolean', 'Yes/No Achievement'), ('habit', 'Daily/Weekly Habit'), ('financial', 'Financial Target')], default='boolean', max_length=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('paused', 'Paused'), ('cancelled', 'Cancelled')], default='active', max_length=15)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('one_time', 'One Time')], default='one_time', max_length=15)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('current_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('unit', models.CharField(blank=True, max_length=50)),
                ('start_date', models.DateField()),
                ('target_date', models.DateField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('reminder_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goals', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='goals', to='goals.goalcategory')),
            ],
            options={
                'verbose_name': 'Goal',
                'verbose_name_plural': 'Goals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('target_value', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('target_date', models.DateField()),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='goals.goal')),
            ],
            options={
                'verbose_name': 'Goal Milestone',
                'verbose_name_plural': 'Goal Milestones',
                'ordering': ['target_date'],
            },
        ),
        migrations.CreateModel(
            name='GoalProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_date', models.DateField()),
                ('value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('notes', models.TextField(blank=True)),
                ('completed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_entries', to='goals.goal')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goal Progress',
                'verbose_name_plural': 'Goal Progress Entries',
                'ordering': ['-progress_date'],
                'unique_together': {('goal', 'progress_date')},
            },
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField()),
                ('title', models.CharField(blank=True, max_length=255)),
                ('content', models.TextField()),
                ('mood_rating', models.IntegerField(blank=True, help_text='Rate your mood from 1 (worst) to 10 (best)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=500)),
                ('is_private', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='journal_entries', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Journal Entry',
                'verbose_name_plural': 'Journal Entries',
                'ordering': ['-entry_date'],
                'unique_together': {('user', 'entry_date')},
            },
        ),
        migrations.CreateModel(
            name='MonthlyReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_month', models.DateField()),
                ('achievements', models.TextField(help_text='What did you achieve this month?')),
                ('challenges', models.TextField(help_text='What challenges did you face?')),
                ('lessons_learned', models.TextField(help_text='What did you learn?')),
                ('next_month_focus', models.TextField(help_text='What will you focus on next month?')),
                ('overall_satisfaction', models.IntegerField(help_text='Rate your overall satisfaction (1-10)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monthly_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Monthly Review',
                'verbose_name_plural': 'Monthly Reviews',
                'ordering': ['-review_month'],
                'unique_together': {('user', 'review_month')},
            },
        ),
    ]
